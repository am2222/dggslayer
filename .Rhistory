dif <- filter(SouthPacificIslands,!Name %in% SouthPacificIslandsa$Name)
View(dif)
SouthPacificIslandsa <- filter(df2, Name %in% SouthPacificIslands$Name )
SouthPacificIslandsa <- filter(df2, Name %in% SouthPacificIslands$Name | Name=="Micronesia, Fed. Sts.")
cn <- filter(df, Name %in% centralAmerica)
View(cn)
cn <- filter(df2, Name %in% centralAmerica)
View(cn)
#https://en.wikipedia.org/wiki/List_of_Caribbean_countries_by_population
ca <- read.csv('D:\\UserData\\Majid\\Downloads\\carabian.csv')
ca2 <- select(ca,Name)%>%
left_join(countries_continent,by=c(Name="Name"))%>%
select(Name,Three_Letter_Country_Code)
cn <- filter(df2, Name %in% ca2$Name)
dif <- filter(cn,!Name %in% ca2$Name)
dif <- filter(ca2,!Name %in% cn$Name)
View(dif)
#coustal countries
#https://en.wikipedia.org/wiki/List_of_countries_by_length_of_coastline#cite_note-22
coustal_cou <- read.csv('D:\\UserData\\Majid\\Downloads\\table-1.csv')
coustal_cou <- read.csv('D:\\UserData\\Majid\\Downloads\\table-1.csv')
cou <- select(coustal_cou,country,km)
View(ea)
View(coustal_cou)
cou <- select(coustal_cou,Country,km)
View(cou)
#coustal countries
#https://en.wikipedia.org/wiki/List_of_countries_by_length_of_coastline#cite_note-22
coustal_cou <- read.csv('D:\\UserData\\Majid\\Downloads\\table-1.csv')
cou <- select(coustal_cou,Country,km)%>%
filter(km>0)
cou <- select(coustal_cou,Country)
View(cou)
#coustal countries
#https://en.wikipedia.org/wiki/List_of_countries_by_length_of_coastline#cite_note-22
coustal_cou <- read.csv('D:\\UserData\\Majid\\Downloads\\table-1.csv')
cou <- select(coustal_cou,Country)
cou <- select(coustal_cou,"Name"=Country)
cn <- filter(df2, Name %in% cou$Name)
dif <- filter(cou,!Name %in% cn$Name)
View(dif)
View(df)
filter(df,Name %in% nafrigha_)%>%select(Name)%>%distinct()%>%count()
nafrigha_ <- c("Western Sahara","Morocco","Tunisia", "Algeria", "Libya", "Egypt", "Israel", "Jordan", "Syria", "Iraq", "Iran", "Kuwait", "Lebanon", "Saudi Arabia", "United Arab Emirates", "Oman", "Yemen","Bahrain", "Qatar")
filter(df,Name %in% nafrigha_)%>%select(Name)%>%distinct()%>%count()
library(dplyr)
library(xlsx)
library(dggridR)
library(writexl)
library(geojsonio)
library(tidyr)
library(stringr)
filter(df,Name %in% nafrigha_)%>%select(Name)%>%distinct()%>%count()
test <- filter(df,Name %in% nafrigha_)%>%select(Name)%>%distinct()
View(test)
View(test)
northAfericaME <- c("Western Sahara","Morocco","Tunisia", "Algeria","Iran, Islamic Rep.","Yemen, Rep.", "Libya","Egypt, Arab Rep.", "Egypt", "Israel", "Jordan", "Syria", "Iraq", "Iran", "Kuwait", "Lebanon", "Saudi Arabia", "United Arab Emirates", "Oman", "Yemen","Bahrain", "Qatar")
countries_continent <- read.csv('D:\\UserData\\Majid\\Downloads\\country-and-continent-codes-list-csv_csv.csv')
countries_continent <- separate(countries_continent,Country_Name,c("Name","B"), sep = "([\\.\\,\\:])")
View(coustal_cou)
View(countries_continent)
afericanCountries <- filter(countries_continent,Countinent_Code=="AF")
afericanCountries <- filter(countries_continent,Continent_Code=="AF")
View(afericanCountries)
afericanCountries <- filter(countries_continent,Continent_Code=="AF")%>%(!Name %in% northAfericaME)
afericanCountries <- filter(countries_continent,Continent_Code=="AF")%>%filter(!Name %in% northAfericaME)
View(afericanCountries)
View(afericanCountries)
afericanCountries <- filter(countries_continent,Continent_Code=="AF")%>%filter(!Name %in% northAfericaME)%>%select(Name)
SubSaharanAfrica <- filter(df2, Name %in% afericanCountries$Name | Name %in% SubSaharan_Africa)
#all countries on the African continent other than those listed above; also include
SubSaharan_Africa <-c("Madagascar", "Mauritius","Seychelles")
SubSaharanAfrica <- filter(df2, Name %in% afericanCountries$Name | Name %in% SubSaharan_Africa)
SubSaharanAfrica <- filter(df2, Name %in% afericanCountries$Name)
SubSaharanAfrica <- filter(df2, Name %in% afericanCountries$Name)
SubSaharanAfrica <- filter(df2, Name %in% afericanCountries$Name | Name %in% SubSaharan_Africa)
View(SubSaharanAfrica)
View(SubSaharanAfrica)
View(afericanCountries)
dif <- filter(afericanCountries,!Name %in% SubSaharanAfrica$Name)
#all countries on the African continent other than those listed above; also include
SubSaharan_Africa <-c("Madagascar", "Mauritius","Seychelles","Dem. Rep. Congo","Congo, Dem. Rep.","Libya")
afericanCountries <- filter(countries_continent,Continent_Code=="AF")%>%filter(!Name %in% northAfericaME)%>%select(Name)
SubSaharanAfrica <- filter(df2, Name %in% afericanCountries$Name | Name %in% SubSaharan_Africa)
northAfericaME <- c("Western Sahara","Morocco","Tunisia", "Algeria","Iran, Islamic Rep.","Yemen, Rep.","Libyan Arab Jamahiriya", "Libya","Egypt, Arab Rep.", "Egypt", "Israel", "Jordan", "Syria", "Iraq", "Iran", "Kuwait", "Lebanon", "Saudi Arabia", "United Arab Emirates", "Oman", "Yemen","Bahrain", "Qatar")
#test <- filter(df,Name %in% nafrigha_)%>%select(Name)%>%distinct()
#all countries on the African continent other than those listed above; also include
SubSaharan_Africa <-c("Madagascar", "Mauritius","Seychelles","Dem. Rep. Congo","Congo, Dem. Rep.","Libya")
afericanCountries <- filter(countries_continent,Continent_Code=="AF")%>%filter(!Name %in% northAfericaME)%>%select(Name)
subSaharanAfrica <- filter(df2, Name %in% afericanCountries$Name | Name %in% SubSaharan_Africa)
CentralSouthAsia <-c("Afghanistan",  "Kazakhstan",   "Pakistan" ,    "Tajikistan",   "Turkmenistan", "Uzbekistan","India", "Bangladesh", "Sri Lanka", "Maldives", "Nepal", "Bhutan" )
#Lao People's Democratic Republic -> Lao PRD
eastSEAsia = c("Mongolia","Taiwan, China", "China", "Korea", "Hong Kong","Hong Kong, China","Hong Kong SAR, China","Lao PRD", "Taiwan", "Vietnam", "Lao People's Democratic Republic", "Cambodia", "Myanmar", "Malaysia", "Indonesia", "Philippines", "Papua New Guinea", "Timor-Leste", "Thailand", "Brunei Darussalam")
#All island countries and territories in the Pacific Ocean apart from those
#named in E/SE Asia. Do not include Australia or New Zealand.
SouthPacificIslands <- filter(countries_continent,Continent_Code=="OC") %>%
select(Name,Three_Letter_Country_Code)%>%
filter(!Three_Letter_Country_Code %in% c('NZL','AUS'))%>%
filter(!Name %in% EastSEAsia)%>%
select(Name)
SouthPacificIslandsa <- filter(df2, Name %in% SouthPacificIslands$Name | Name=="Micronesia, Fed. Sts.")
#https://en.wikipedia.org/wiki/List_of_Caribbean_countries_by_population
ca <- read.csv('D:\\UserData\\Majid\\Downloads\\carabian.csv')
ca2 <- select(ca,Name)%>%
left_join(countries_continent,by=c(Name="Name"))%>%
select(Name,Three_Letter_Country_Code)
#https://www.worldatlas.com/articles/which-countries-make-up-central-america.html
centralAmerica <- c("Belize",
"Costa Rica",
"El Salvador",
"Guatemala",
"Honduras" ,
"Nicaragua" ,
"Panama")
cn <- filter(df2, Name %in% ca2$Name)
ca_edit <- c("St. Kitts and Nevis",
"St. Lucia",
"St. Martin (French part)",
"St. Vincent and the Grenadines",
"Sint Maarten (Dutch part)",
"Virgin Islands",
"British Virgin Islands ")
df <- mutate(df,region=case_when(
Name %in% northAfericaME ~ "NorthAfericaME",
Name %in% SubSaharanAfrica$Name  ~ "SubSaharanAfrica",
Name %in% CentralSouthAsia ~ "CentralSouthAsia",
Name %in% EastSEAsia ~ "EastSEAsia",
Name %in% SouthPacificIslandsa$Name ~ "SouthPacificIslands",
Name %in% cn$Name | Name %in% centralAmerica | Name %in% ca_edit ~ "LatinSouthAmericaCaribbean"
))
View(df)
df <- mutate(df,region=case_when(
Name %in% northAfericaME ~ "NorthAfericaME",
Name %in% SubSaharanAfrica$Name  ~ "SubSaharanAfrica",
Name %in% CentralSouthAsia ~ "CentralSouthAsia",
Name %in% EastSEAsia ~ "EastSEAsia",
Name %in% SouthPacificIslandsa$Name ~ "SouthPacificIslands",
Name %in% cn$Name | Name %in% centralAmerica | Name %in% ca_edit ~ "LatinSouthAmericaCaribbean",
TRUE ~ "Other"
))
View(df)
hazard_region <- group_by(df,region,disaster_id)%>% tally()
sumhazard_region <- group_by(df,region,disaster_id)%>% summarise( totall_displacements = sum(NewDisplacements,na.rm=TRUE))
hazard_region_join <- inner_join(sumhazard_region,hazard_region,by=c("region"="region","disaster_id"="disaster_id"))
View(hazard_region_join)
# 4 disaster types: 1 = floods, 2 = hurricanes/storms, 3 = droughts/heat, 4 = wildfire/mudslides/other ->NA=4
df <- filter(df,!hazardtype %in% stripOut)%>%mutate(disaster_id=case_when(
hazardtype == "Flood" ~ as.numeric(1),
hazardtype == "Storm"  ~ as.numeric(2),
hazardtype == "Drought" | hazardtype=="Extreme temperature" ~ as.numeric(3),
hazardtype == "Wildfire" | hazardtype=="Mass movement" | hazardtype=="Dry mass movement" ~ as.numeric(4)
))%>%filter(!is.na(disaster_id))
hazard_region <- group_by(df,region,disaster_id)%>% tally()
sumhazard_region <- group_by(df,region,disaster_id)%>% summarise( totall_displacements = sum(NewDisplacements,na.rm=TRUE))
hazard_region_join <- inner_join(sumhazard_region,hazard_region,by=c("region"="region","disaster_id"="disaster_id"))
View(hazard_region_join)
fixCa <- c(
"Micronesia, Fed. Sts.",
"France",
'Korea',
"Dem. People's Rep. Korea",
"Korea, Dem. Rep.",
"Korea, Rep.",
"Myanmar",
"Taiwan, China",
"Hong Kong SAR, China",
"Hong Kong, China",
"CÃ´te d'Ivoire",
"Virgin Islands",
"British Virgin Islands",
"Congo, Dem. Rep.",
"Dem. Rep. Congo",
"St. Lucia",
"St. Kitts and Nevis",
"St. Vincent and the Grenadines",
"St. Martin (French part)",
"West Bank and Gaza",
"Dem. Rep. Congo",
"Congo, Dem. Rep.")
#coustal countries
#https://en.wikipedia.org/wiki/List_of_countries_by_length_of_coastline#cite_note-22
coustal_cou <- read.csv('D:\\UserData\\Majid\\Downloads\\table-1.csv')
cou <- select(coustal_cou,"Name"=Country)
df <- mutate(df,coastalCountries=case_when(
Name %in% cou$Name |  Name %in% fixCa ~ TRUE,
TRUE ~ FALSE
))
View(df)
dfs <- readxl::read_xlsx("D:\\UserData\\Majid\\Downloads\\idmc_disaster_all_dataset.xlsx")
View(dfs)
df <- mutate(df,disaster_id5=case_when(
(disaster_id == 1 | disaster_id==2 ) & coastalCountries==TRUE  ~ as.numeric(5),
TRUE ~ disaster_id
))
View(df)
hazard5_country <- group_by(df,Name,disaster_id5)%>% tally()
sumhazard5_country <- group_by(df,Name,disaster_id5)%>% summarise( totall_displacements = sum(NewDisplacements,na.rm=TRUE))
hazard5_country_join <- inner_join(sumhazard_country,hazard_country,by=c("Name"="Name","disaster_id5"="disaster_id5"))
View(hazard5_country)
hazard5_region <- group_by(df,region,disaster_id5)%>% tally()
sumhazard5_region <- group_by(df,region,disaster_id5)%>% summarise( totall_displacements = sum(NewDisplacements,na.rm=TRUE))
hazard5_region_join <- inner_join(sumhazard_region,hazard_region,by=c("region"="region","disaster_id5"="disaster_id5"))
View(hazard_region_join)
View(hazard5_country)
sumhazard5_country <- group_by(df,Name,disaster_id5)%>% summarise( totall_displacements = sum(NewDisplacements,na.rm=TRUE))
hazard5_country_join <- inner_join(sumhazard5_country,hazard5_country,by=c("Name"="Name","disaster_id5"="disaster_id5"))
hazard5_region <- group_by(df,region,disaster_id5)%>% tally()
sumhazard5_region <- group_by(df,region,disaster_id5)%>% summarise( totall_displacements = sum(NewDisplacements,na.rm=TRUE))
hazard5_region_join <- inner_join(sumhazard5_region,hazard5_region,by=c("region"="region","disaster_id5"="disaster_id5"))
sheets <- list("hazard_four_class_country_sum_no" = hazard_country_join,
"hazard_four_class_region_sum_no" = hazard_region_join,
"hazard_five_class_country_sum_no" = hazard5_country_join,
"hazard_five_class_region_sum_no" = hazard5_region_join
) #assume sheet1 and sheet2 are data frames
hazard_country <- group_by(df,Name,disaster_id)%>% tally()
sumhazard_country <- group_by(df,Name,disaster_id)%>% summarise( totall_displacements = sum(NewDisplacements,na.rm=TRUE))
hazard_country_join <- inner_join(sumhazard_country,hazard_country,by=c("Name"="Name","disaster_id"="disaster_id"))
write_xlsx(sheets, "D:\\UserData\\Majid\\Downloads\\first_results.xlsx")
sheets <- list("hazard_four_class_country_sum_no" = hazard_country_join,
"hazard_four_class_region_sum_no" = hazard_region_join,
"hazard_five_class_country_sum_no" = hazard5_country_join,
"hazard_five_class_region_sum_no" = hazard5_region_join
) #assume sheet1 and sheet2 are data frames
write_xlsx(sheets, "D:\\UserData\\Majid\\Downloads\\first_results.xlsx")
sheets <- list("hzrd_4_class_country" = hazard_country_join,
"hzrd_4_class_region" = hazard_region_join,
"hzrd_5_class_country" = hazard5_country_join,
"hzrd_5_class_region" = hazard5_region_join
) #assume sheet1 and sheet2 are data frames
write_xlsx(sheets, "D:\\UserData\\Majid\\Downloads\\first_results.xlsx")
sheets <- list("hzrd_4_class_country" = hazard_country_join,
"hzrd_4_class_region" = hazard_region_join,
"hzrd_5_class_country" = hazard5_country_join,
"hzrd_5_class_region" = hazard5_region_join,
"Data"=df
) #assume sheet1 and sheet2 are data frames
write_xlsx(sheets, "D:\\UserData\\Majid\\Downloads\\first_results.xlsx")
library(dplyr)
library(xlsx)
library(dggridR)
library(geojsonio)
library(writexl)
library(tidyr)
library(stringr)
library(stringr)
df <- readxl::read_xlsx("D:\\UserData\\Majid\\Downloads\\idmc_disaster_all_dataset.xlsx")
countries_continent <- read.csv('D:\\UserData\\Majid\\Downloads\\country-and-continent-codes-list-csv_csv.csv')
countries_continent <- separate(countries_continent,Country_Name,c("Name","B"), sep = "([\\.\\,\\:])")
head(df)
stripOut <- c("Earthquake", "Volcanic activity","Volcanic eruption","Wet Mass movement","Wet Mass Movement", "Wet mass movement")
id
#TODO: what about NA?  what
types <-select(df,hazardtype)%>%
filter(!in.na(hazardtype))%>%
distinct()
#TODO: what about NA?  what
types <-select(df,hazardtype)%>%
distinct()
# 4 disaster types: 1 = floods, 2 = hurricanes/storms, 3 = droughts/heat, 4 = wildfire/mudslides/other ->NA=4
df <- filter(df,!hazardtype %in% stripOut)%>%
filter(!is.na(hazardtype))%>%
mutate(disaster_id=case_when(
hazardtype == "Flood" ~ as.numeric(1),
hazardtype == "Storm"  ~ as.numeric(2),
hazardtype == "Drought" | hazardtype=="Extreme temperature" ~ as.numeric(3),
hazardtype == "Wildfire" | hazardtype=="Mass movement" | hazardtype=="Dry mass movement" |hazardtype=="Wet Mass movement"|hazardtype=="Wet Mass Movement" |hazardtype=="Wet mass movement" ~ as.numeric(4)
))%>%filter(!is.na(disaster_id))
View(df)
View(df)
hazard_country <- group_by(df,Name,disaster_id)%>% tally()
sumhazard_country <- group_by(df,Name,disaster_id)%>% summarise( totall_displacements = sum(NewDisplacements,na.rm=TRUE))
hazard_country_join <- inner_join(sumhazard_country,hazard_country,by=c("Name"="Name","disaster_id"="disaster_id"))
northAfericaME <- c("Western Sahara","Morocco","Tunisia", "Algeria","Iran, Islamic Rep.","Yemen, Rep.","Libyan Arab Jamahiriya", "Libya","Egypt, Arab Rep.", "Egypt", "Israel", "Jordan", "Syria", "Iraq", "Iran", "Kuwait", "Lebanon", "Saudi Arabia", "United Arab Emirates", "Oman", "Yemen","Bahrain", "Qatar")
#test <- filter(df,Name %in% nafrigha_)%>%select(Name)%>%distinct()
#all countries on the African continent other than those listed above; also include
SubSaharan_Africa <-c("Madagascar", "Mauritius","Seychelles","Dem. Rep. Congo","Congo, Dem. Rep.","Libya")
afericanCountries <- filter(countries_continent,Continent_Code=="AF")%>%filter(!Name %in% northAfericaME)%>%select(Name)
subSaharanAfrica <- filter(df2, Name %in% afericanCountries$Name | Name %in% SubSaharan_Africa)
CentralSouthAsia <-c("Afghanistan",  "Kazakhstan",   "Pakistan" ,    "Tajikistan",   "Turkmenistan", "Uzbekistan","India", "Bangladesh", "Sri Lanka", "Maldives", "Nepal", "Bhutan" )
#Lao People's Democratic Republic -> Lao PRD
eastSEAsia = c("Mongolia","Taiwan, China", "China", "Korea", "Hong Kong","Hong Kong, China","Hong Kong SAR, China","Lao PRD", "Taiwan", "Vietnam", "Lao People's Democratic Republic", "Cambodia", "Myanmar", "Malaysia", "Indonesia", "Philippines", "Papua New Guinea", "Timor-Leste", "Thailand", "Brunei Darussalam")
#All island countries and territories in the Pacific Ocean apart from those
#named in E/SE Asia. Do not include Australia or New Zealand.
SouthPacificIslands <- filter(countries_continent,Continent_Code=="OC") %>%
select(Name,Three_Letter_Country_Code)%>%
filter(!Three_Letter_Country_Code %in% c('NZL','AUS'))%>%
filter(!Name %in% EastSEAsia)%>%
select(Name)
SouthPacificIslandsa <- filter(df2, Name %in% SouthPacificIslands$Name | Name=="Micronesia, Fed. Sts.")
#https://en.wikipedia.org/wiki/List_of_Caribbean_countries_by_population
ca <- read.csv('D:\\UserData\\Majid\\Downloads\\carabian.csv')
ca2 <- select(ca,Name)%>%
left_join(countries_continent,by=c(Name="Name"))%>%
select(Name,Three_Letter_Country_Code)
#https://www.worldatlas.com/articles/which-countries-make-up-central-america.html
centralAmerica <- c("Belize",
"Costa Rica",
"El Salvador",
"Guatemala",
"Honduras" ,
"Nicaragua" ,
"Panama")
cn <- filter(df2, Name %in% ca2$Name)
ca_edit <- c("St. Kitts and Nevis",
"St. Lucia",
"St. Martin (French part)",
"St. Vincent and the Grenadines",
"Sint Maarten (Dutch part)",
"Virgin Islands",
"British Virgin Islands ")
df <- mutate(df,region=case_when(
Name %in% northAfericaME ~ "NorthAfericaME",
Name %in% SubSaharanAfrica$Name  ~ "SubSaharanAfrica",
Name %in% CentralSouthAsia ~ "CentralSouthAsia",
Name %in% EastSEAsia ~ "EastSEAsia",
Name %in% SouthPacificIslandsa$Name ~ "SouthPacificIslands",
Name %in% cn$Name | Name %in% centralAmerica | Name %in% ca_edit ~ "LatinSouthAmericaCaribbean",
TRUE ~ "Other"
))
hazard_region <- group_by(df,region,disaster_id)%>% tally()
sumhazard_region <- group_by(df,region,disaster_id)%>% summarise( totall_displacements = sum(NewDisplacements,na.rm=TRUE))
hazard_region_join <- inner_join(sumhazard_region,hazard_region,by=c("region"="region","disaster_id"="disaster_id"))
#coustal countries
#https://en.wikipedia.org/wiki/List_of_countries_by_length_of_coastline#cite_note-22
coustal_cou <- read.csv('D:\\UserData\\Majid\\Downloads\\table-1.csv')
cou <- select(coustal_cou,"Name"=Country)
fixCa <- c(
"Micronesia, Fed. Sts.",
"France",
'Korea',
"Dem. People's Rep. Korea",
"Korea, Dem. Rep.",
"Korea, Rep.",
"Myanmar",
"Taiwan, China",
"Hong Kong SAR, China",
"Hong Kong, China",
"CÃ´te d'Ivoire",
"Virgin Islands",
"British Virgin Islands",
"Congo, Dem. Rep.",
"Dem. Rep. Congo",
"St. Lucia",
"St. Kitts and Nevis",
"St. Vincent and the Grenadines",
"St. Martin (French part)",
"West Bank and Gaza",
"Dem. Rep. Congo",
"Congo, Dem. Rep.")
df <- mutate(df,coastalCountries=case_when(
Name %in% cou$Name |  Name %in% fixCa ~ TRUE,
TRUE ~ FALSE
))
df <- mutate(df,disaster_id5=case_when(
(disaster_id == 1 | disaster_id==2 ) & coastalCountries==TRUE  ~ as.numeric(5),
TRUE ~ disaster_id
))
hazard5_country <- group_by(df,Name,disaster_id5)%>% tally()
sumhazard5_country <- group_by(df,Name,disaster_id5)%>% summarise( totall_displacements = sum(NewDisplacements,na.rm=TRUE))
hazard5_country_join <- inner_join(sumhazard5_country,hazard5_country,by=c("Name"="Name","disaster_id5"="disaster_id5"))
hazard5_region <- group_by(df,region,disaster_id5)%>% tally()
sumhazard5_region <- group_by(df,region,disaster_id5)%>% summarise( totall_displacements = sum(NewDisplacements,na.rm=TRUE))
hazard5_region_join <- inner_join(sumhazard5_region,hazard5_region,by=c("region"="region","disaster_id5"="disaster_id5"))
sheets <- list("hzrd_4_class_country" = hazard_country_join,
"hzrd_4_class_region" = hazard_region_join,
"hzrd_5_class_country" = hazard5_country_join,
"hzrd_5_class_region" = hazard5_region_join,
"Data"=df
) #assume sheet1 and sheet2 are data frames
write_xlsx(sheets, "D:\\UserData\\Majid\\Downloads\\first_results.xlsx")
windCoef <- 0.8
init_std<- 0.1
space <- windCoef-init_std : windCoef+init_std
space
space <- windCoef-init_std:windCoef+init_std
space
space <- (windCoef-init_std):(windCoef+init_std)
space
space <- (windCoef-init_std):(windCoef+init_std)
space
space <-runif(100, min=windCoef-init_std, max=windCoef+init_std)
space
wind_coef <- 0.8
init_std<- 0.1
space <-runif(100, min=wind_coef-init_std, max=wind_coef+init_std)
space
for (i in 1:100){
w <- space[i]
}
for (i in 1:100){
w <- space[i]
print(w)
}
runGist('https://gist.github.com/krenova/fc184de17892905182a422c96117e989')
library(shiny)
runExample("05_sliders")
remotes::install_github("dreamRs/shinybusy")
install.packages("timevis")
library(timevis)
data <- data.frame(
id      = 1:4,
content = c("Item one", "Item two",
"Ranged item", "Item four"),
start   = c("2016-01-10", "2016-01-11",
"2016-01-20", "2016-02-14 15:00:00"),
end     = c(NA, NA, "2016-02-04", NA)
)
timevis(data)
seq(c(ISOdate(1980,1,1)), by = "DSTyear", length.out = 100)
seq(c(ISOdate(1980,1,1)), by = "DSTy", length.out = 100)
seq(c(ISOdate(1980,1,1)), by = "year", length.out = 100)
seq(c(ISOdate(1980,1,1)), by = "year", length.out = 10)
seq(c(ISOdate(1950,1,1)), by = "year", length.out = 60)
seq(c(ISOdate(1950,1,1)),c(ISOdate(2010,1,1)), by = "year")
date=seq(c(ISOdate(1950,1,1)),c(ISOdate(2010,1,1)), by = "year")
date2=seq(c(ISOdate(1951,1,1)),c(ISOdate(2011,1,1)), by = "year")
data <- data.frame(
id      = 1:61,
content = date,
start   = date,
end     = date2
)
date=seq(c(ISOdate(1950,1,1)),c(ISOdate(2010,1,1)), by = "year")
date2=seq(c(ISOdate(1951,1,1)),c(ISOdate(2011,1,1)), by = "year")
data3 <- data.frame(
id      = 1:61,
content = date,
start   = date,
end     = date2
)
timevis(data)
install.packages("dggridR")
install.packages("dggridR")
devtools::build()
setwd(paste(dirname(rstudioapi::getActiveDocumentContext()$path),"dggslayer",sep = "/"))
package <- paste(dirname(rstudioapi::getActiveDocumentContext()$path),"dggslayer_0.0.0.9000.tar.gz",sep = "/")
devtools::dev_mode(T,package)
if (file.exists(package)){
file.remove(package)
}
detach("package:dggslayer", unload = TRUE)
devtools::build()
devtools::dev_mode(T,package)
devtools::build()
devtools::build()
install.packages("E:/Personal/Lab/pkg/Rdggs/dggslayer_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(leaflet)
library(leaflet.providers)
library(dggslayer)
m <- leaflet() %>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addProviderTiles(providers$Thunderforest.MobileAtlas,options = tileOptions(apikey = '5c067b469722440ea2a21bfd5d70e27f'))
m
install.packages("leaflet.providers")
install.packages("leaflet.providers")
install.packages("leaflet.providers")
nominalLayerOptions <-list(
classNames=list(
c("Evergreen Needleleaf Forests",1,"#006300"),
c("Evergreen Broadleaf Forests", 2,"#006300"),
c("Deciduous Needleleaf Forests", 3,"#148c3d"),
c("Deciduous Broadleaf Forests", 4,"#1eab05"),
c("Mixed Forests", 5,"#5c752b"),
c("Closed Shrublands", 6,"#bad48f"),
c("Open Shrublands", 7,"#b39e2b"),
c("Woody Savannas", 8,"#b38a33"),
c("Savannas", 9,"#9c7554"),
c("Grasslands", 10,"#e1cf8a"),
c("Permanent Wetlands", 11,"#6ba38a"),
c("Croplands", 12,"#e6ae66"),
c("Urban and Built-up Lands", 13,"#dc2126"),
c("Cropland/Natural Vegetation Mosaics", 14,"#949c70"),
c("Permanent Snow and Ice", 15,"#fffaff"),
c("Barren", 16,"#a8abae"),
c("Water Bodies", 17,"#4c70a3")
))
nominalLayerOptions <-list(
classNames=list(
c("class 0",0,"#006300"),
c("class 1", 1,"#4c70a3"),
c("class 2", 2,"#148c3d"),
c("class 3", 3,"#a8abae"),
c("class 4", 4,"#b38a33"),
c("class 5", 5,"#bad48f"),
c("class 6", 6,"#949c70"),
c("class 7", 7,"#1eab05")
))
nominalLayerOptions <-list(
classNames=list(
# c("class 0",0.0,"#006300"),
c("0.1", 0.1,"#1eab05"),
c("0.2", 0.2,"#FFC300"),
c("0.3", 0.3,"#FF5733"),
c("0.4", 0.4,"#C70039"),
c("0.5>=", 0.5,"#900C3F")
))
m%>%addNominalDGGSLayer(layer="MOD12Q1DATA",tid='2003-01-01',group="nominalLayer",options = nominalLayerOptions)
m
devtools::build()
devtools::dev_mode(F,package)
devtools::dev_mode(F,package)
package <- paste(dirname(rstudioapi::getActiveDocumentContext()$path),"dggslayer_0.0.0.9000.tar.gz",sep = "/")
devtools::dev_mode(F,package)
library("devtools")
devtools::install_github("klutometis/roxygen")
library(roxygen2)
setwd("..\")
#create("Nzdggs")
devtools::document()
devtools::document()
devtools::document()
devtools::document()
