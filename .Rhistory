continuousLayerOptions <- list(colorScale=c("OrRd"))
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addContinuousDGGSLayer(layer="NLULCDATA",tid='1992-01-01',filter="key='LULC'",group="continuousLayer",options = continuousLayerOptions)
m
nominalLayerOptions <-list(
classNames=list(
c("Evergreen Needleleaf Forests",1,"#006300"),
c("Evergreen Broadleaf Forests", 2,"#006300"),
c("Deciduous Needleleaf Forests", 3,"#148c3d"),
c("Deciduous Broadleaf Forests", 4,"#1eab05"),
c("Mixed Forests", 5,"#5c752b"),
c("Closed Shrublands", 6,"#bad48f"),
c("Open Shrublands", 7,"#b39e2b"),
c("Woody Savannas", 8,"#b38a33"),
c("Savannas", 9,"#9c7554"),
c("Grasslands", 10,"#e1cf8a"),
c("Permanent Wetlands", 11,"#6ba38a"),
c("Croplands", 12,"#e6ae66"),
c("Urban and Built-up Lands", 13,"#dc2126"),
c("Cropland/Natural Vegetation Mosaics", 14,"#949c70"),
c("Permanent Snow and Ice", 15,"#fffaff"),
c("Barren", 16,"#a8abae"),
c("Water Bodies", 17,"#4c70a3")
))
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addNominalDGGSLayer(layer="MOD12Q1DATA",tid='2003-01-01',group="nominalLayer",options = nominalLayerOptions)
m
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addContinuousDGGSLayer(layer="testme",tid='2000',group="nominalLayer",options = continuousLayerOptions)
m
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addContinuousDGGSLayer(layer="testme",tid='2000',group="nominalLayer",options = continuousLayerOptions)
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addContinuousDGGSLayer(layer="testme",tid='2000',group="nominalLayer",options = continuousLayerOptions)
m
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addContinuousDGGSLayer(layer="testme1",tid='2000',group="nominalLayer",options = continuousLayerOptions)
m
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addContinuousDGGSLayer(layer="testme1",tid='2000',group="nominalLayer",options = continuousLayerOptions)
m
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addContinuousDGGSLayer(layer="testmee",tid='2000',group="nominalLayer",options = continuousLayerOptions)
m
library(devtools)
library(roxygen2)
devtools::document()
install_github("thespatiallabatLaurier/dggslayer")
library(leaflet)
library(dggslayer)
continuousLayerOptions <- list(colorScale=c("OrRd"))
nominalLayerOptions <-list(
classNames=list(
c("Evergreen Needleleaf Forests",1,"#006300"),
c("Evergreen Broadleaf Forests", 2,"#006300"),
c("Deciduous Needleleaf Forests", 3,"#148c3d"),
c("Deciduous Broadleaf Forests", 4,"#1eab05"),
c("Mixed Forests", 5,"#5c752b"),
c("Closed Shrublands", 6,"#bad48f"),
c("Open Shrublands", 7,"#b39e2b"),
c("Woody Savannas", 8,"#b38a33"),
c("Savannas", 9,"#9c7554"),
c("Grasslands", 10,"#e1cf8a"),
c("Permanent Wetlands", 11,"#6ba38a"),
c("Croplands", 12,"#e6ae66"),
c("Urban and Built-up Lands", 13,"#dc2126"),
c("Cropland/Natural Vegetation Mosaics", 14,"#949c70"),
c("Permanent Snow and Ice", 15,"#fffaff"),
c("Barren", 16,"#a8abae"),
c("Water Bodies", 17,"#4c70a3")
))
m <- leaflet() %>%
addTiles() %>%
setServerAddress("http://127.0.0.1:3000/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addContinuousDGGSLayer(layer="testmee",tid='2000',group="nominalLayer",options = continuousLayerOptions)
addContinuousDGGSLayer(layer="NLULCDATA",tid='1992-01-01',filter="key='LULC'",group="continuousLayer",options = continuousLayerOptions)
m
m <- leaflet() %>%
addTiles() %>%
setServerAddress("http://127.0.0.1:3000/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addContinuousDGGSLayer(layer="testmee",tid='2000',group="nominalLayer",options = continuousLayerOptions)
m
m <- leaflet() %>%
addTiles() %>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addContinuousDGGSLayer(layer="testmee",tid='2000',group="nominalLayer",options = continuousLayerOptions)
m
m <- leaflet() %>%
addTiles()
m
library(leaflet)
m
library(devtools)
library(roxygen2)
devtools::document()
install_github("thespatiallabatLaurier/dggslayer")
library(leaflet)
library(dggslayer)
continuousLayerOptions <- list(colorScale=c("OrRd"))
nominalLayerOptions <-list(
classNames=list(
c("Evergreen Needleleaf Forests",1,"#006300"),
c("Evergreen Broadleaf Forests", 2,"#006300"),
c("Deciduous Needleleaf Forests", 3,"#148c3d"),
c("Deciduous Broadleaf Forests", 4,"#1eab05"),
c("Mixed Forests", 5,"#5c752b"),
c("Closed Shrublands", 6,"#bad48f"),
c("Open Shrublands", 7,"#b39e2b"),
c("Woody Savannas", 8,"#b38a33"),
c("Savannas", 9,"#9c7554"),
c("Grasslands", 10,"#e1cf8a"),
c("Permanent Wetlands", 11,"#6ba38a"),
c("Croplands", 12,"#e6ae66"),
c("Urban and Built-up Lands", 13,"#dc2126"),
c("Cropland/Natural Vegetation Mosaics", 14,"#949c70"),
c("Permanent Snow and Ice", 15,"#fffaff"),
c("Barren", 16,"#a8abae"),
c("Water Bodies", 17,"#4c70a3")
))
m <- leaflet() %>%
addTiles() %>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addContinuousDGGSLayer(layer="testmee",tid='2000',group="nominalLayer",options = continuousLayerOptions)
m
install.packages('leafletR')
install.packages("leafletR")
library(leaflet)
m <- leaflet() %>%
addTiles()
m
library(dggslayer)
m <- leaflet() %>%
addTiles() %>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addContinuousDGGSLayer(layer="testmee",tid='2000',group="nominalLayer",options = continuousLayerOptions)
m
m <- leaflet() %>%
addTiles() %>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addContinuousDGGSLayer(layer="MOD12Q1DATA",tid='2008',key='MOD12Q1',group="nominalLayer",options = continuousLayerOptions)
m <- leaflet() %>%
addTiles() %>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addContinuousDGGSLayer(layer="MOD12Q1DATA",tid='2008',filter="key='MOD12Q1'",group="nominalLayer",options = continuousLayerOptions)
m
filter="key='MOD12Q1'"
filter
install_github("thespatiallabatLaurier/dggslayer")
library(devtools)
library(roxygen2)
install_github("thespatiallabatLaurier/dggslayer")
install_github("thespatiallabatLaurier/dggslayer")
install.packages('jsonlite')
install.packages("jsonlite")
install_github("thespatiallabatLaurier/dggslayer")
library(devtools)
library(roxygen2)
devtools::document()
install_github("thespatiallabatLaurier/dggslayer")
library(leaflet)
library(dggslayer)
continuousLayerOptions <- list(colorScale=c("OrRd"))
nominalLayerOptions <-list(
classNames=list(
c("Evergreen Needleleaf Forests",1,"#006300"),
c("Evergreen Broadleaf Forests", 2,"#006300"),
c("Deciduous Needleleaf Forests", 3,"#148c3d"),
c("Deciduous Broadleaf Forests", 4,"#1eab05"),
c("Mixed Forests", 5,"#5c752b"),
c("Closed Shrublands", 6,"#bad48f"),
c("Open Shrublands", 7,"#b39e2b"),
c("Woody Savannas", 8,"#b38a33"),
c("Savannas", 9,"#9c7554"),
c("Grasslands", 10,"#e1cf8a"),
c("Permanent Wetlands", 11,"#6ba38a"),
c("Croplands", 12,"#e6ae66"),
c("Urban and Built-up Lands", 13,"#dc2126"),
c("Cropland/Natural Vegetation Mosaics", 14,"#949c70"),
c("Permanent Snow and Ice", 15,"#fffaff"),
c("Barren", 16,"#a8abae"),
c("Water Bodies", 17,"#4c70a3")
))
m <- leaflet() %>%
addTiles() %>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addContinuousDGGSLayer(layer="MOD12Q1DATA",tid='2008',filter="key='MOD12Q1'",group="nominalLayer",options = continuousLayerOptions)
m
install.packages("leafletR")
install.packages("leafletR")
library(leaflet)
library(dggslayer)
continuousLayerOptions <- list(colorScale=c("OrRd"))
nominalLayerOptions <-list(
classNames=list(
c("Evergreen Needleleaf Forests",1,"#006300"),
c("Evergreen Broadleaf Forests", 2,"#006300"),
c("Deciduous Needleleaf Forests", 3,"#148c3d"),
c("Deciduous Broadleaf Forests", 4,"#1eab05"),
c("Mixed Forests", 5,"#5c752b"),
c("Closed Shrublands", 6,"#bad48f"),
c("Open Shrublands", 7,"#b39e2b"),
c("Woody Savannas", 8,"#b38a33"),
c("Savannas", 9,"#9c7554"),
c("Grasslands", 10,"#e1cf8a"),
c("Permanent Wetlands", 11,"#6ba38a"),
c("Croplands", 12,"#e6ae66"),
c("Urban and Built-up Lands", 13,"#dc2126"),
c("Cropland/Natural Vegetation Mosaics", 14,"#949c70"),
c("Permanent Snow and Ice", 15,"#fffaff"),
c("Barren", 16,"#a8abae"),
c("Water Bodies", 17,"#4c70a3")
))
m <- leaflet() %>%
addTiles() %>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addContinuousDGGSLayer(layer="MOD12Q1DATA",tid='2008',filter="key='MOD12Q1'",group="nominalLayer",options = continuousLayerOptions)
m
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
r <- plumber::plumb("plumber.R")  # Where 'plumber.R' is the location of the file shown above
r$run(port=8000)
library(stringr)
package_path = "E:/Personal/Lab/pkg/dggslayer/"
files <- dir(paste(package_path,"/man/",sep=""), pattern ="*.Rd")
sections <- c('\\arguments', '\\author', '\\concept', '\\description',
'\\details', '\\docType', '\\encoding', '\\format', '\\keyword', '\\name',
'\\note', '\\references', '\\section', '\\seealso', '\\source', '\\title',
'\\value', '\\examples', '\\usage', '\\alias', '\\Rdversion', '\\synopsis',
'\\Sexpr', '\\RdOpts' )
sections.print <- c('name', 'title', 'description', 'format', 'usage', 'arguments',
'details', 'value', 'seealso', 'note', 'author',
'references', 'examples')
markups.latex <- c('\\acronym', '\\bold', '\\cite', '\\command', '\\dfn',
'\\dQuote', '\\email', '\\emph', '\\file', '\\item', '\\linkS4class',
'\\pkg', '\\sQuote', '\\strong', '\\var', '\\describe', '\\enumerate',
'\\itemize', '\\enc', '\\if', '\\ifelse', '\\method', '\\S3method',
'\\S4method', '\\tabular', '\\subsection', '\\link', '\\href' )
markups.r <- c('\\cr', '\\dots', '\\ldots', '\\R', '\\tab', '\\code', '\\dontshow',
'\\donttest', '\\testonly', '\\dontrun', '\\env', '\\kbd', '\\option',
'\\out', '\\preformatted', '\\samp', '\\special', '\\url', '\\verb',
'\\deqn', '\\eqn', '\\newcommand', '\\renewcommand')
parseRd <- function (rd, link.ext)
{
if (!("Rd" %in% class(rd)))
stop("Please provide Rd object to parse.")
tags <- Rd2md:::RdTags(rd)
results <- list()
if (!("\\name" %in% tags)) {
return(results)
}
for (i in sections) {
if (i %in% tags) {
if (i == "\\arguments") {
args <- rd[[which(tags == "\\arguments")]]
args.tags <- Rd2md:::RdTags(args)
args <- args[which(args.tags == "\\item")]
params <- character()
for (i in seq_along(args)) {
param.name <- as.character(args[[i]][[1]])
param.desc <- paste(sapply(args[[i]][[2]],
FUN = function(x) {
Rd2md:::parseTag(x, link.ext = link.ext)
}), collapse = " ")
params <- c(params, param.desc)
names(params)[length(params)] <- param.name
}
results$arguments <- params
}
else if (i %in% c("\\usage")) {
results[["usage"]] <- paste0("```r\n", paste(sapply(rd[[which(tags ==
"\\usage")]], FUN = function(x) {
if (x[1] == "\n")
x[1] = ""
Rd2md:::parseTag(x, stripNewline = FALSE, stripWhite = FALSE,
stripTab = FALSE, link.ext = link.ext)
}), collapse = ""), "```\n")
}else if (i %in% c("\\examples")) {
results[["examples"]] <- paste0(sapply(rd[[which(tags =="\\examples")]], FUN = function(x) {
if (x[1] == "\n")
x[1] = ""
f <<- Rd2md:::parseTag(x, stripNewline = T, stripWhite = F,
stripTab = FALSE, link.ext = link.ext)
print(f)
f
}))
}
else if (i %in% tags) {
key <- substr(i, 2, nchar(i))
results[[key]] <- paste(sapply(rd[[which(tags ==
i)[1]]], FUN = function(x) {
Rd2md:::parseTag(x, stripNewline = FALSE, link.ext = link.ext)
}), collapse = " ")
}
}
}
invisible(results)
}
Rd2markdown <- function (rdfile, outfile, append = FALSE)
{
append = as.logical(append)
if (length(append) != 1)
stop("Please provide append as single logical value.")
rdfile = as.character(rdfile)
if (length(rdfile) != 1)
stop("Please provide rdfile as single character value (file path with extension).")
outfile = as.character(outfile)
if (length(outfile) != 1)
stop("Please provide outfile as single character value (file path with extension).")
if (append) {
if (!file.exists(outfile))
stop("If append=TRUE, the outfile must exists already.")
}
file.ext <- "md"
link.ext <- "html"
section <- "#"
subsection <- "##"
section.sep <- "\n\n"
run.examples <- FALSE
rd <<- tools:::parse_Rd(rdfile)
results <- parseRd(rd)
if (all(c("name", "title") %in% names(results))) {
filename <- paste0(results$name, ".", file.ext)
results$filename <- filename
results$directory <- dirname(outfile)
cat("", file = outfile, append = append)
cat(paste0(section, " `", results$name, "`: ", results$title),
file = outfile, append = TRUE)
cat(section.sep, file = outfile, append = TRUE)
for (i in sections.print[!sections.print %in% c("name",
"title")]) {
if (i %in% names(results)) {
if (i == "examples") {
cat(paste(subsection, "Examples"), file = outfile,
append = TRUE)
cat(section.sep, file = outfile, append = TRUE)
a <<- results$examples
cat("```  ", paste(results$examples, collapse = "\n"),
"```", "  ", file = outfile, append = TRUE)
}
else if (i %in% c("usage")) {
cat(paste(subsection, Rd2md:::simpleCap(i)), file = outfile,
append = TRUE)
cat(section.sep, file = outfile, append = TRUE)
cat(paste0(results[[i]]), file = outfile,
append = TRUE)
cat(section.sep, file = outfile, append = TRUE)
}
else if (i %in% c("arguments")) {
cat(paste(subsection, Rd2md:::simpleCap(i)), file = outfile,
append = TRUE)
cat(section.sep, file = outfile, append = TRUE)
cat("Argument      |Description\n", file = outfile,
append = TRUE)
cat("------------- |----------------\n", file = outfile,
append = TRUE)
cat(paste0("```", names(results[[i]]), "```",
"     |     ", results[[i]], collapse = "\n"),
file = outfile, append = TRUE)
cat(section.sep, file = outfile, append = TRUE)
}
else {
cat(paste(subsection, Rd2md:::simpleCap(i)), file = outfile,
append = TRUE)
cat(section.sep, file = outfile, append = TRUE)
cat(results[[i]], file = outfile, append = TRUE)
cat(section.sep, file = outfile, append = TRUE)
}
}
}
}
else {
warning("name and title are required. Not creating markdown file")
}
invisible(results)
}
lapply(files, function(x) {
outfile = paste(paste(package_path,"/docs/",sep=""),str_replace(x, ".Rd", ".md"),sep = "/")
rdfile = paste(paste(package_path,"/man/",sep=""),x,sep = "/")
Rd2markdown(rdfile = rdfile, outfile = outfile)
})
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
r <- plumber::plumb("plumber.R")  # Where 'plumber.R' is the location of the file shown above
r$run(port=8000)
r$run(port=8000)
m <- leaflet() %>%
addTiles() %>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addContinuousDGGSLayer(layer="MOD12Q1DATA",tid="'2004-01-01'",filter="key='MOD12Q1'",group="nominalLayer",options = continuousLayerOptions)
m
r$run(port=8000)
m <- leaflet() %>%
addTiles() %>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addContinuousDGGSLayer(layer="ANUSPLINE3",tid='1950',filter="key='MOD12Q1'",group="nominalLayer",options = continuousLayerOptions)
m
r$run(port=8000)
m <- leaflet() %>%
addTiles() %>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addContinuousDGGSLayer(layer="ANUSPLINE3",tid='1950',filter="key='MAX_TEMP'",group="nominalLayer",options = continuousLayerOptions)
m
r$run(port=8000)
library(dggslayer)
library(leaflet)
library(dggslayer)
continuousLayerOptions <- list(colorScale=c("OrRd"))
nominalLayerOptions <-list(
classNames=list(
c("Evergreen Needleleaf Forests",1,"#006300"),
c("Evergreen Broadleaf Forests", 2,"#006300"),
c("Deciduous Needleleaf Forests", 3,"#148c3d"),
c("Deciduous Broadleaf Forests", 4,"#1eab05"),
c("Mixed Forests", 5,"#5c752b"),
c("Closed Shrublands", 6,"#bad48f"),
c("Open Shrublands", 7,"#b39e2b"),
c("Woody Savannas", 8,"#b38a33"),
c("Savannas", 9,"#9c7554"),
c("Grasslands", 10,"#e1cf8a"),
c("Permanent Wetlands", 11,"#6ba38a"),
c("Croplands", 12,"#e6ae66"),
c("Urban and Built-up Lands", 13,"#dc2126"),
c("Cropland/Natural Vegetation Mosaics", 14,"#949c70"),
c("Permanent Snow and Ice", 15,"#fffaff"),
c("Barren", 16,"#a8abae"),
c("Water Bodies", 17,"#4c70a3")
))
m <- leaflet() %>%
addTiles() %>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addContinuousDGGSLayer(layer="ANUSPLINE3",tid='1950',filter="key='MAX_TEMP'",group="nominalLayer",options = continuousLayerOptions)
m
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
r <- plumber::plumb("plumber.R")  # Where 'plumber.R' is the location of the file shown above
r$run(port=8000)
library(dggslayer)
library(leaflet)
library(dggslayer)
continuousLayerOptions <- list(colorScale=c("OrRd"))
nominalLayerOptions <-list(
classNames=list(
c("Evergreen Needleleaf Forests",1,"#006300"),
c("Evergreen Broadleaf Forests", 2,"#006300"),
c("Deciduous Needleleaf Forests", 3,"#148c3d"),
c("Deciduous Broadleaf Forests", 4,"#1eab05"),
c("Mixed Forests", 5,"#5c752b"),
c("Closed Shrublands", 6,"#bad48f"),
c("Open Shrublands", 7,"#b39e2b"),
c("Woody Savannas", 8,"#b38a33"),
c("Savannas", 9,"#9c7554"),
c("Grasslands", 10,"#e1cf8a"),
c("Permanent Wetlands", 11,"#6ba38a"),
c("Croplands", 12,"#e6ae66"),
c("Urban and Built-up Lands", 13,"#dc2126"),
c("Cropland/Natural Vegetation Mosaics", 14,"#949c70"),
c("Permanent Snow and Ice", 15,"#fffaff"),
c("Barren", 16,"#a8abae"),
c("Water Bodies", 17,"#4c70a3")
))
m <- leaflet() %>%
addTiles() %>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addContinuousDGGSLayer(layer="ANUSPLINE3",tid='1950',filter="key='MAX_TEMP'",group="nominalLayer",options = continuousLayerOptions)
m
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
r <- plumber::plumb("plumber.R")  # Where 'plumber.R' is the location of the file shown above
r$run(port=8000)
continuousLayerOptions <- list(colorScale=c("OrRd"))
nominalLayerOptions <-list(
classNames=list(
c("Evergreen Needleleaf Forests",1,"#006300"),
c("Evergreen Broadleaf Forests", 2,"#006300"),
c("Deciduous Needleleaf Forests", 3,"#148c3d"),
c("Deciduous Broadleaf Forests", 4,"#1eab05"),
c("Mixed Forests", 5,"#5c752b"),
c("Closed Shrublands", 6,"#bad48f"),
c("Open Shrublands", 7,"#b39e2b"),
c("Woody Savannas", 8,"#b38a33"),
c("Savannas", 9,"#9c7554"),
c("Grasslands", 10,"#e1cf8a"),
c("Permanent Wetlands", 11,"#6ba38a"),
c("Croplands", 12,"#e6ae66"),
c("Urban and Built-up Lands", 13,"#dc2126"),
c("Cropland/Natural Vegetation Mosaics", 14,"#949c70"),
c("Permanent Snow and Ice", 15,"#fffaff"),
c("Barren", 16,"#a8abae"),
c("Water Bodies", 17,"#4c70a3")
))
