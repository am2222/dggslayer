c("class 3", 3,"#a8abae"),
c("class 4", 4,"#b38a33"),
c("class 5", 5,"#bad48f"),
c("class 6", 6,"#949c70"),
c("class 7", 7,"#1eab05")
))
nominalLayerOptions <-list(
classNames=list(
# c("class 0",0.0,"#006300"),
c("0.1", 0.1,"#1eab05"),
c("0.2", 0.2,"#FFC300"),
c("0.3", 0.3,"#FF5733"),
c("0.4", 0.4,"#C70039"),
c("0.5>=", 0.5,"#900C3F")
))
m%>%addNominalDGGSLayer(layer="MOD12Q1DATA",tid='2003-01-01',group="nominalLayer",options = nominalLayerOptions)
m
devtools::build()
devtools::dev_mode(F,package)
devtools::dev_mode(F,package)
package <- paste(dirname(rstudioapi::getActiveDocumentContext()$path),"dggslayer_0.0.0.9000.tar.gz",sep = "/")
devtools::dev_mode(F,package)
library("devtools")
devtools::install_github("klutometis/roxygen")
library(roxygen2)
setwd("..\")
#create("Nzdggs")
devtools::document()
devtools::document()
devtools::document()
devtools::document()
library(devtools)
#dependency
install_github("am2222/nzdggs")
install_github("am2222/dggslayer")
library(leaflet)
library(dggslayer)
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addProviderTiles(providers$Thunderforest.MobileAtlas,options = tileOptions(apikey = '5c067b469722440ea2a21bfd5d70e27f'))
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)
m
remove.packages("dggslayer")
install_github("am2222/dggslayer")
library(leaflet)
library(dggslayer)
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)
m
m <- leaflet() %>%
addTiles() %>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)
m
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)
m
library(leaflet)
library(dggslayer)
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)
m
remove.packages("dggslayer")
install_github("am2222/dggslayer")
library(leaflet)
library(dggslayer)
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)
m
remove.packages("dggslayer")
install_github("am2222/dggslayer")
library(leaflet)
library(dggslayer)
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)
m
install_github("am2222/dggslayer")
library(devtools)
install_github("am2222/dggslayer")
library(leaflet)
library(dggslayer)
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)
m
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addContinuousDGGSLayer  (layer="reanalysis",tid='1979',filter="key='PMAX'",group="continuousLayer",options = continuousLayerOptions)
continuousLayerOptions <- list(colorScale=c("OrRd"))
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addContinuousDGGSLayer  (layer="reanalysis",tid='1979',filter="key='PMAX'",group="continuousLayer",options = continuousLayerOptions)
library(leaflet)
library(dggslayer)
continuousLayerOptions <- list(colorScale=c("OrRd"))
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addContinuousDGGSLayer  (layer="reanalysis",tid='1979',filter="key='PMAX'",group="continuousLayer",options = continuousLayerOptions)
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addContinuousDGGSLayer  (layer="reanalysis",tid='1979',filter="key='PMAX'",group="continuousLayer",options = continuousLayerOptions)
m
leaflet
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addNumericalDGGSLayer  (layer="reanalysis",tid='1979',filter="key='PMAX'",group="continuousLayer",options = continuousLayerOptions)
m
remove.packages("dggslayer")
library(devtools)
install_github("am2222/dggslayer")
library(leaflet)
library(dggslayer)
continuousLayerOptions <- list(colorScale=c("OrRd"))
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addNumericalDGGSLayer  (layer="reanalysis",tid='1979',filter="key='PMAX'",group="continuousLayer",options = continuousLayerOptions)
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)
m
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addNumericalDGGSLayer(layer="reanalysis",tid='1979',filter="key='PMAX'",group="continuousLayer",options = continuousLayerOptions)
remove.packages("dggslayer")
library(devtools)
install_github("am2222/dggslayer")
library(leaflet)
library(dggslayer)
continuousLayerOptions <- list(colorScale=c("OrRd"))
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addNumericalDGGSLayer(layer="reanalysis",tid='1979',filter="key='PMAX'",group="continuousLayer",options = continuousLayerOptions)
dggsContinuousTileOptions <- function(max,min,resolution=NULL,colorScale=NULL, ...) {
opts <- filterNULL(list(
min=min,max=max,
resolution = resolution,colorScale=colorScale,
...))
opts
}
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addNumericalDGGSLayer(layer="reanalysis",tid='1979',filter="key='PMAX'",group="continuousLayer",options = continuousLayerOptions)
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)
library(leaflet)
library(dggslayer)
continuousLayerOptions <- list(colorScale=c("OrRd"))
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addNumericalDGGSLayer(layer="reanalysis",tid='1979',filter="key='PMAX'",group="continuousLayer",options = continuousLayerOptions)
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)
library(leaflet)
library(dggslayer)
continuousLayerOptions <- list(colorScale=c("OrRd"))
m <- leaflet() %>%
addTiles()
remove.packages("dggslayer")
dggsNominalTileOptions <- function(resolution=NULL,classNames=NULL, ...) {
opts <- filterNULL(list(
resolution = resolution,classNames=classNames,
...))
opts
}
dggsContinuousTileOptions <- function(max,min,resolution=NULL,colorScale=NULL, ...) {
opts <- filterNULL(list(
min=min,max=max,
resolution = resolution,colorScale=colorScale,
...))
opts
}
dggsNumericalTileOptions <- function(resolution=NULL,colorScale=NULL,geostat =NULL, ...) {
opts <- filterNULL(list(
resolution = resolution,colorScale=colorScale,geostat=geostat,
...))
opts
}
#'     c("Urban and Built-up Lands", 13,"#dc2126"),
#'     c("Cropland/Natural Vegetation Mosaics", 14,"#949c70"),
#'     c("Permanent Snow and Ice", 15,"#fffaff"),
#'     c("Barren", 16,"#a8abae"),
#'     c("Water Bodies", 17,"#4c70a3")
#'
#'  ))
#'
#'
#' m%>%addNominalDGGSLayer(layer="MOD12Q1DATA",tid='2003-01-01',group="nominalLayer",options = nominalLayerOptions)
addNominalDGGSLayer <- function(
map,
layer,
tid=NULL,
filter=NULL,
layerId = NULL,
group = NULL,
options = dggsNominalTileOptions()
) {
map$dependencies <- c(map$dependencies, leafletDGGSProviderDependencies())
invokeMethod(map, getMapData(map), "addDGGSNominalProvider",
layer,tid,filter, layerId, group, options)
}
addContinuousDGGSLayer  <- function(
map,
layer,
tid=NULL,
filter=NULL,
layerId = NULL,
group = NULL,
options = dggsContinuousTileOptions()
) {
map$dependencies <- c(map$dependencies, leafletDGGSProviderDependencies())
invokeMethod(map, getMapData(map), "addContinuousDGGSLayer",
layer,tid,filter, layerId, group, options)
}
addNumericalDGGSLayer  <- function(
map,
layer,
tid=NULL,
filter=NULL,
layerId = NULL,
group = NULL,
options = dggsNumericalTileOptions()
) {
map$dependencies <- c(map$dependencies, leafletDGGSProviderDependencies())
invokeMethod(map, getMapData(map), "addNumericalDGGSLayer",
layer,tid,filter, layerId, group, options)
}
setServerAddress <- function(map,server_URL) {
map$dependencies <- c(map$dependencies, leafletDGGSProviderDependencies())
invokeMethod(map, getMapData(map), "setServerAddress",server_URL)
}
addDGGSProvider <- function(
map,
layer,
tid=NULL,
filter=NULL,
layerId = NULL,
group = NULL,
options = dggsTileOptions()
) {
map$dependencies <- c(map$dependencies, leafletDGGSProviderDependencies())
invokeMethod(map, getMapData(map), "addDGGSProvider",
layer,tid,filter, layerId, group, options)
}
dggsTileOptions <- function(geostat =list(avg=NULL,median=NULL,sum=NULL,max=NULL,min=NULL,variance=NULL),resolution=NULL,legend=list(legendType="nominal",addSymbologyControl=T,classificationType="EqInterval",classNumber=NULL,classNames=NULL), colorScale=NULL, ...) {
opts <- filterNULL(list(
geostat = geostat, resolution = resolution,legend=legend,
colorScale = colorScale,
...))
opts
}
dggslayer <- function(message, width = NULL, height = NULL, elementId = NULL) {
# forward options using x
x = list(
message = message
)
# create widget
htmlwidgets::createWidget(
name = 'dggslayer',
x,
width = width,
height = height,
package = 'dggslayer',
elementId = elementId
)
}
#'   \code{'400px'}, \code{'auto'}) or a number, which will be coerced to a
#'   string and have \code{'px'} appended.
#' @param expr An expression that generates a dggslayer
#' @param env The environment in which to evaluate \code{expr}.
#' @param quoted Is \code{expr} a quoted expression (with \code{quote()})? This
#'   is useful if you want to save an expression in a variable.
#'
#' @name dggslayer-shiny
#'
#' @export
dggslayerOutput <- function(outputId, width = '100%', height = '400px'){
htmlwidgets::shinyWidgetOutput(outputId, 'dggslayer', width, height, package = 'dggslayer')
}
#' @rdname dggslayer-shiny
#' @export
renderDggslayer <- function(expr, env = parent.frame(), quoted = FALSE) {
if (!quoted) { expr <- substitute(expr) } # force quoted
htmlwidgets::shinyRenderWidget(expr, dggslayerOutput, env, quoted = TRUE)
}
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addNumericalDGGSLayer(layer="reanalysis",tid='1979',filter="key='PMAX'",group="continuousLayer",options = continuousLayerOptions)
install_github("am2222/dggslayer")
library(devtools)
install_github("am2222/dggslayer")
remove.packages("dggslayer")
library(devtools)
install_github("am2222/dggslayer")
library(leaflet)
library(dggslayer)
continuousLayerOptions <- list(colorScale=c("OrRd"))
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addNumericalDGGSLayer(layer="reanalysis",tid='1979',filter="key='PMAX'",group="continuousLayer",options = continuousLayerOptions)
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addNominalDGGSLayer(layer="reanalysis",tid='1979',filter="key='PMAX'",group="continuousLayer",options = continuousLayerOptions)
library(devtools)
install_github("am2222/dggslayer")
library(leaflet)
library(dggslayer)
continuousLayerOptions <- list(colorScale=c("OrRd"))
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addContinuousDGGSLayer(layer="reanalysis",tid='1979',filter="key='PMAX'",group="continuousLayer",options = continuousLayerOptions)
devtools::install_github("klutometis/roxygen")
library(roxygen2)
devtools::document()
remove.packages("dggslayer")
install_github("am2222/dggslayer")
library(leaflet)
library(dggslayer)
continuousLayerOptions <- list(colorScale=c("OrRd"))
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addContinuousDGGSLayer(layer="reanalysis",tid='1979',filter="key='PMAX'",group="continuousLayer",options = continuousLayerOptions)
m
library(leaflet)
library(dggslayer)
continuousLayerOptions <- list(colorScale=c("OrRd"))
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addContinuousDGGSLayer(layer="reanalysis",tid='1979',filter="key='PMAX'",group="continuousLayer",options = continuousLayerOptions)
m
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addContinuousDGGSLayer(layer="reanalysis",tid='1979',filter="key='RMAX'",group="continuousLayer",options = continuousLayerOptions)
m
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addContinuousDGGSLayer(layer="NLULCDATA",tid='1992-01-01',filter="key='LULC'",group="continuousLayer",options = continuousLayerOptions)
library(leaflet)
library(dggslayer)
continuousLayerOptions <- list(colorScale=c("OrRd"))
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addContinuousDGGSLayer(layer="NLULCDATA",tid='1992-01-01',filter="key='LULC'",group="continuousLayer",options = continuousLayerOptions)
m
nominalLayerOptions <-list(
classNames=list(
c("Evergreen Needleleaf Forests",1,"#006300"),
c("Evergreen Broadleaf Forests", 2,"#006300"),
c("Deciduous Needleleaf Forests", 3,"#148c3d"),
c("Deciduous Broadleaf Forests", 4,"#1eab05"),
c("Mixed Forests", 5,"#5c752b"),
c("Closed Shrublands", 6,"#bad48f"),
c("Open Shrublands", 7,"#b39e2b"),
c("Woody Savannas", 8,"#b38a33"),
c("Savannas", 9,"#9c7554"),
c("Grasslands", 10,"#e1cf8a"),
c("Permanent Wetlands", 11,"#6ba38a"),
c("Croplands", 12,"#e6ae66"),
c("Urban and Built-up Lands", 13,"#dc2126"),
c("Cropland/Natural Vegetation Mosaics", 14,"#949c70"),
c("Permanent Snow and Ice", 15,"#fffaff"),
c("Barren", 16,"#a8abae"),
c("Water Bodies", 17,"#4c70a3")
))
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addNominalDGGSLayer(layer="MOD12Q1DATA",tid='2003-01-01',group="nominalLayer",options = nominalLayerOptions)
m
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addContinuousDGGSLayer(layer="testme",tid='2000',group="nominalLayer",options = continuousLayerOptions)
m
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addContinuousDGGSLayer(layer="testme",tid='2000',group="nominalLayer",options = continuousLayerOptions)
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addContinuousDGGSLayer(layer="testme",tid='2000',group="nominalLayer",options = continuousLayerOptions)
m
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addContinuousDGGSLayer(layer="testme1",tid='2000',group="nominalLayer",options = continuousLayerOptions)
m
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addContinuousDGGSLayer(layer="testme1",tid='2000',group="nominalLayer",options = continuousLayerOptions)
m
m <- leaflet() %>%
addTiles() %>%
setServerAddress("https://spatial.wlu.ca/tileserver/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addContinuousDGGSLayer(layer="testmee",tid='2000',group="nominalLayer",options = continuousLayerOptions)
m
library(devtools)
library(roxygen2)
devtools::document()
install_github("thespatiallabatLaurier/dggslayer")
library(leaflet)
library(dggslayer)
continuousLayerOptions <- list(colorScale=c("OrRd"))
nominalLayerOptions <-list(
classNames=list(
c("Evergreen Needleleaf Forests",1,"#006300"),
c("Evergreen Broadleaf Forests", 2,"#006300"),
c("Deciduous Needleleaf Forests", 3,"#148c3d"),
c("Deciduous Broadleaf Forests", 4,"#1eab05"),
c("Mixed Forests", 5,"#5c752b"),
c("Closed Shrublands", 6,"#bad48f"),
c("Open Shrublands", 7,"#b39e2b"),
c("Woody Savannas", 8,"#b38a33"),
c("Savannas", 9,"#9c7554"),
c("Grasslands", 10,"#e1cf8a"),
c("Permanent Wetlands", 11,"#6ba38a"),
c("Croplands", 12,"#e6ae66"),
c("Urban and Built-up Lands", 13,"#dc2126"),
c("Cropland/Natural Vegetation Mosaics", 14,"#949c70"),
c("Permanent Snow and Ice", 15,"#fffaff"),
c("Barren", 16,"#a8abae"),
c("Water Bodies", 17,"#4c70a3")
))
m <- leaflet() %>%
addTiles() %>%
setServerAddress("http://127.0.0.1:3000/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addContinuousDGGSLayer(layer="testmee",tid='2000',group="nominalLayer",options = continuousLayerOptions)
addContinuousDGGSLayer(layer="NLULCDATA",tid='1992-01-01',filter="key='LULC'",group="continuousLayer",options = continuousLayerOptions)
m
m <- leaflet() %>%
addTiles() %>%
setServerAddress("http://127.0.0.1:3000/")%>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addContinuousDGGSLayer(layer="testmee",tid='2000',group="nominalLayer",options = continuousLayerOptions)
m
m <- leaflet() %>%
addTiles() %>%
leaflet::setView(lng=-106.34, lat=56.13,zoom = 2)%>%
addContinuousDGGSLayer(layer="testmee",tid='2000',group="nominalLayer",options = continuousLayerOptions)
m
m <- leaflet() %>%
addTiles()
m
library(leaflet)
m
